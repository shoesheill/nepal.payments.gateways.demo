@{
    ViewData["Title"] = "Payment Demo";
}

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    .payment-demo-container {
        background: #f8f9fa;
        min-height: 100vh;
        padding: 2rem 0;
    }
    
    .main-card {
        background: #ffffff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border: 1px solid #e9ecef;
    }
    
    .payment-gateway-card {
        background: #ffffff;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .payment-gateway-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }
    
    .payment-gateway-card.khalti {
        border-color: #6c5ce7;
    }
    
    .payment-gateway-card.esewa {
        border-color: #00b894;
    }
    
    .gateway-logo {
        max-height: 50px;
    }
    
    .test-credentials {
        background: #fff3cd;
        border: 1px solid #ffc107;
        border-radius: 5px;
        padding: 10px;
        margin-top: 10px;
        font-size: 0.8rem;
    }
    
    .test-credentials h6 {
        color: #856404;
        font-weight: 600;
        margin-bottom: 8px;
    }
    
    .test-credentials .credential-item {
        margin-bottom: 3px;
        color: #6c5a00;
    }
    
    .fonepay-section {
        background: #ffffff;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        padding: 20px;
    }
    
    .warning-banner {
        background: #fff3cd;
        border: 1px solid #ffc107;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 15px;
        position: relative;
    }
    
    .warning-banner::before {
        content: "‚ö†Ô∏è";
        position: absolute;
        top: 10px;
        left: 10px;
        font-size: 1rem;
    }
    
    .warning-banner .warning-content {
        margin-left: 25px;
    }
    
    .qr-container {
        background: #ffffff;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        padding: 15px;
        text-align: center;
        min-height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .status-container {
        background: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        padding: 15px;
        min-height: 250px;
    }
    
    .status-badge {
        font-size: 0.8rem;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
    }
    
    .events-log {
        background: #ffffff;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        padding: 10px;
        max-height: 150px;
        overflow-y: auto;
        font-size: 0.8rem;
    }
    
    .btn-modern {
        border-radius: 5px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
    }
    
    .btn-khalti {
        background: #6c5ce7;
        color: white;
    }
    
    .btn-khalti:hover {
        background: #5a4fcf;
        color: white;
    }
    
    .btn-esewa {
        background: #00b894;
        color: white;
    }
    
    .btn-esewa:hover {
        background: #00a085;
        color: white;
    }
    
    .btn-fonepay {
        background: #0984e3;
        color: white;
    }
    
    .btn-fonepay:hover {
        background: #0770c2;
        color: white;
    }
    
    .form-control-modern {
        border-radius: 5px;
        border: 1px solid #ced4da;
        padding: 8px 12px;
        transition: all 0.3s ease;
    }
    
    .form-control-modern:focus {
        border-color: #0984e3;
        box-shadow: 0 0 0 0.2rem rgba(9, 132, 227, 0.25);
    }
    
    .page-title {
        color: #2d3436;
        font-weight: 700;
    }
    
    .section-title {
        color: #2d3436;
        font-weight: 600;
        margin-bottom: 15px;
    }
</style>

<div class="payment-demo-container">
    <div class="container-fluid">
        <!-- Header -->
        <div class="text-center mb-4">
            <h1 class="display-5 page-title">Nepal Payment Gateways Demo</h1>
            <p class="lead text-muted">Experience seamless payment integration with Nepal's leading payment gateways</p>
                </div>

        <!-- Messages -->
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                        <strong>Success!</strong> @ViewBag.Message
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Error!</strong> @ViewBag.Error
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

        <!-- Main Layout: Fonepay QR on Left, Payment Gateways on Right -->
        <div class="row">
            <!-- Fonepay QR Payment Section - Left Side -->
            <div class="col-lg-6 mb-4">
                <div class="fonepay-section">
                    <h3 class="section-title">üì± Fonepay QR Payment</h3>
                    
                    <!-- Warning Banner -->
                    <div class="warning-banner">
                        <div class="warning-content">
                            <h6 class="mb-2"><strong>‚ö†Ô∏è Important Notice</strong></h6>
                            <p class="mb-1"><strong>Fonepay QR Payment uses REAL transactions!</strong></p>
                            <p class="mb-0">‚Ä¢ No test credentials available - test at your own risk</p>
                            <p class="mb-0">‚Ä¢ You can use amounts in paisa (e.g., 0.001)</p>
                            <p class="mb-0">‚Ä¢ Payments will be processed through real Fonepay gateway</p>
                        </div>
                    </div>

                    <!-- Input Form -->
                    <div class="row g-3 mb-4">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Amount (NPR)</label>
                            <input type="number" min="1" step="0.01" class="form-control form-control-modern" 
                                   id="fp-amount" placeholder="e.g. 0.01" value="0.01" />
                            <small class="text-muted">You can also use paisa (e.g., 0.01 for 1 Paisa)</small>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Remarks</label>
                            <input type="text" maxlength="25" class="form-control form-control-modern" 
                                   id="fp-remarks1" placeholder="Order #123" value="Test Order" />
                        </div>
                    </div>
                    <div class="mb-4">
                        <button class="btn btn-modern btn-fonepay w-100" id="fp-generate">
                            <i class="fas fa-qrcode me-2"></i>Generate QR
                        </button>
                </div>

                    <!-- QR and Status Display -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="qr-container">
                                <div id="fp-qr-container" class="d-none">
                                    <img id="fp-qr-image" alt="Fonepay QR" style="max-width: 200px; border-radius: 5px;" />
                                    <div class="mt-2">
                                        <span class="badge bg-primary">Scan to pay with Fonepay</span>
                                    </div>
                                </div>
                                <div id="fp-qr-placeholder" class="text-muted">
                                    <i class="fas fa-qrcode fa-2x mb-2" style="color: #dee2e6;"></i>
                                    <p>Click "Generate QR" to create payment</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="status-container">
                                <h6 class="mb-2">Payment Status</h6>
                                <div class="mb-2">
                                    <span class="status-badge bg-secondary text-white" id="fp-status">Ready</span>
                                </div>
                                <h6 class="mb-2">Payment Events</h6>
                                <div id="fp-events" class="events-log">
                                    <p class="text-muted mb-0">Payment events will appear here...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Gateways Section - Right Side -->
            <div class="col-lg-6 mb-4">
                <div class="main-card p-4">
                    <h3 class="section-title">üí≥ Payment Gateways</h3>
                    
                    <!-- Khalti Gateway -->
                    <div class="mb-4">
                        <div class="payment-gateway-card khalti p-3">
                            <div class="text-center mb-3">
                                <img src="~/img/Khalti logo.png" alt="Khalti" class="gateway-logo mb-2" />
                                <h5 class="mb-2" style="color: #6c5ce7;">Pay with Khalti</h5>
                                <form method="post" asp-controller="Payment" asp-action="PayWithKhalti">
                                    <button type="submit" class="btn btn-modern btn-khalti w-100">
                                        <i class="fas fa-credit-card me-2"></i>Pay with Khalti
                                    </button>
                                </form>
        </div>

        <!-- Test Credentials -->
                            <div class="test-credentials">
                                <h6><i class="fas fa-key me-2"></i>Test Credentials</h6>
                                <div class="credential-item"><strong>Mobile:</strong> 9800000001/2/3/4/5</div>
                                <div class="credential-item"><strong>Pin:</strong> 1111</div>
                                <div class="credential-item"><strong>OTP:</strong> 987654</div>
                        </div>
                        </div>
                    </div>

                    <!-- eSewa Gateway -->
                    <div class="mb-4">
                        <div class="payment-gateway-card esewa p-3">
                            <div class="text-center mb-3">
                                <img src="~/img/esewa logo.png" alt="eSewa" class="gateway-logo mb-2" />
                                <h5 class="mb-2" style="color: #00b894;">Pay with eSewa</h5>
                                <form method="post" asp-controller="Payment" asp-action="PayWitheSewa">
                                    <button type="submit" class="btn btn-modern btn-esewa w-100">
                                        <i class="fas fa-mobile-alt me-2"></i>Pay with eSewa
                                    </button>
                                </form>
                </div>
                            
                            <!-- Test Credentials -->
                            <div class="test-credentials">
                                <h6><i class="fas fa-key me-2"></i>Test Credentials</h6>
                                <div class="credential-item"><strong>Username:</strong> 9806800001/2/3/4/5</div>
                                <div class="credential-item"><strong>Password:</strong> Nepal@123</div>
                                <div class="credential-item"><strong>Token:</strong> 123456</div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://unpkg.com/@@microsoft/signalr@@latest/dist/browser/signalr.min.js"></script>
<script>
(function () {
    const el = (id) => document.getElementById(id);
    const statusEl = el('fp-status');
    const eventsEl = el('fp-events');
    const qrImg = el('fp-qr-image');
    const qrContainer = el('fp-qr-container');
    const qrPlaceholder = el('fp-qr-placeholder');
    const btnGen = el('fp-generate');

    let currentPrn = null;
    let signalRConnection = null;

    function setStatus(text, variant) {
        statusEl.className = 'status-badge bg-' + (variant || 'secondary') + ' text-white';
        statusEl.textContent = text;
    }

    function addEvent(message, type = 'info') {
        const time = new Date().toLocaleTimeString();
        const badge = type === 'success' ? 'success' : type === 'error' ? 'danger' : type === 'warning' ? 'warning' : 'info';
        const html = `<div class="mb-1"><span class="badge bg-${badge}">${time}</span> ${message}</div>`;
        eventsEl.innerHTML = html + eventsEl.innerHTML;
    }

    function renderQr(qrMessage) {
        const url = 'https://api.qrserver.com/v1/create-qr-code/?size=260x260&data=' + encodeURIComponent(qrMessage);
        qrImg.src = url;
        qrContainer.classList.remove('d-none');
        qrPlaceholder.classList.add('d-none');
    }

    async function connectSignalR(prn) {
        try {
            signalRConnection = new signalR.HubConnectionBuilder()
                .withUrl("/paymentHub")
                .build();

            signalRConnection.on("PaymentStatusUpdate", function (update) {
                handlePaymentUpdate(update);
            });

            await signalRConnection.start();
            addEvent('Connected to payment server', 'info');

            await signalRConnection.invoke("JoinPaymentGroup", prn);
            addEvent('Monitoring payment: ' + prn, 'info');
        } catch (err) {
            addEvent('Connection failed: ' + err.message, 'error');
            setStatus('Connection Error', 'danger');
        }
    }

    function handlePaymentUpdate(update) {
        const eventType = update.eventType;
        const data = update.data;

        addEvent(`Event: ${eventType}`, 'info');

        switch (eventType) {
            case 'WEBSOCKET_CONNECTED':
                setStatus('Connected - Scan QR', 'info');
                addEvent('Waiting for QR scan...', 'info');
                break;
            case 'QR_VERIFIED':
                setStatus('QR Scanned', 'warning');
                addEvent('QR code scanned successfully!', 'warning');
                break;
            case 'PAYMENT_SUCCESS':
                setStatus('Payment Successful', 'success');
                addEvent('Payment completed successfully!', 'success');
                break;
            case 'PAYMENT_FAILED':
                setStatus('Payment Failed', 'danger');
                addEvent('Payment was declined or cancelled', 'error');
                break;
            case 'PAYMENT_CANCELLED':
                setStatus('Payment Cancelled', 'warning');
                addEvent('Payment cancelled by user', 'warning');
                break;
            case 'PAYMENT_VERIFIED':
                setStatus('Verified & Complete', 'success');
                addEvent('Payment verified by merchant', 'success');
                break;
            case 'PAYMENT_TIMEOUT':
                setStatus('Payment Timeout', 'secondary');
                addEvent('Payment session expired', 'warning');
                break;
            case 'WEBSOCKET_ERROR':
                setStatus('Connection Error', 'danger');
                addEvent('Error: ' + (data.message || 'Unknown error'), 'error');
                break;
        }
    }

    btnGen.addEventListener('click', async function () {
        const amount = el('fp-amount').value.trim();
        const remarks1 = el('fp-remarks1').value.trim();

        if (!amount || parseFloat(amount) <= 0) {
            alert('Please enter a valid amount');
            return;
        }

        setStatus('Generating QR...', 'info');
        eventsEl.innerHTML = '';

        try {
            const res = await fetch('/Payment/FonepayQr', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ amount, remarks1, remarks2: '' })
            });

            if (!res.ok) {
                throw new Error('Failed to generate QR code');
            }

            const data = await res.json();

            if (data && data.success) {
                currentPrn = data.prn;
                renderQr(data.qrMessage);
                setStatus('QR Generated', 'success');
                addEvent('QR code generated successfully', 'success');
                addEvent('Amount: Rs. ' + amount, 'info');

                // Connect to SignalR for real-time updates
                await connectSignalR(currentPrn);
            } else {
                setStatus('Generation Failed', 'danger');
                addEvent('Error: ' + (data.message || 'Unknown error'), 'error');
            }
        } catch (err) {
            setStatus('Error', 'danger');
            addEvent('Error: ' + err.message, 'error');
        }
    });
})();
</script>